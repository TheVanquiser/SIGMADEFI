// Version: 1.0.0
type List<T> = ?(T, List<T>);
type MetadataDesc = [MetadataPart];
type MetadataKeyVal = {key : Text; val : MetadataVal};
type MetadataPart =
  {data : Blob; key_val_data : [MetadataKeyVal]; purpose : MetadataPurpose};
type MetadataPurpose = {#Preview; #Rendered};
type MetadataVal =
  {
    #BlobContent : Blob;
    #Nat16Content : Nat16;
    #Nat32Content : Nat32;
    #Nat64Content : Nat64;
    #Nat8Content : Nat8;
    #NatContent : Nat;
    #TextContent : Text
  };
type Nft = {id : TokenId; metadata : MetadataDesc; owner : Principal};
type TokenId = Nat64;
actor {
  stable var custodians : ?(Principal, List<Principal>);
  stable var logo : {data : Text; logo_type : Text};
  stable var maxLimit : Nat16;
  stable var name : Text;
  stable var nfts : ?(Nft, List<Nft>);
  stable var symbol : Text;
  stable var transactionId : Nat
};
